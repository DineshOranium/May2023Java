Collection:-
---

https://data-flair.training/blogs/wp-content/uploads/sites/2/2018/03/hierarchy-of-collection-framework-in-java.webp

Framework - Set of Interfaces and Classes.

Iterable -> Collection -> List -> ArrayList

Array vs Collection
----

1. Static vs Dynamic

2. Homogeneous vs Home & Hetro geneous data items (Similar & Dissimilar)

3. Dont have enough readymade vs Enough readymade methods.

Collection -> No direct implemetation available -> Indirectly we are imp with the help of Arralist. (List)

Collection: is an interface where we can store group of individual objects as single entity

Collection support only objects (Wont support primitive data type)

Collection<Object> ref = new ArrayList<>();

package interview;

interface CollectionDemo {

	void test1();

	void test2();

}

interface ListDemo extends CollectionDemo {

	void test3();

	void test4();

}

class ArrayListDemo implements ListDemo {

	@Override
	public void test1() {
		// TODO Auto-generated method stub

	}

	@Override
	public void test2() {
		// TODO Auto-generated method stub

	}

	@Override
	public void test3() {
		// TODO Auto-generated method stub

	}

	@Override
	public void test4() {
		// TODO Auto-generated method stub

	}
	
	private void test5() {
		// TODO Auto-generated method stub

	}

	public static void main(String[] args) {

		CollectionDemo obj = new ArrayListDemo();

	}
}


package interview;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

// Object[] arr = {};

public class question2 {

	@SuppressWarnings("unlikely-arg-type")
	public static void main(String[] args) {

//		Collection<Object> col = new ArrayList<>();
//
//		col.add("Dinesh");
//		col.add(10);
//		col.add(25.5);
//		col.add(true);
//
//		System.out.println(col);
//
//		for (Object o : col) {
//
//			System.out.println(o);
//		}

		List<Integer> list = new ArrayList<>();

		list.add(10);
		list.add(20);
		list.add(30);

//		System.out.println(list.get(10));

		System.out.println("While");

		int i = 0;

		while (i < list.size()) {

			System.out.println(list.get(i));

			i++;
		}

		System.out.println("Do while");

		int j = 0;

		do {

			System.out.println(list.get(j));
			j++;
		} while (j < list.size());

		System.out.println("For loop");

		for (int i1 = 0; i1 < list.size(); i1++) {
			System.out.println(list.get(i1));

		}

		System.out.println("Enhanced for ");

		for (int l : list) {

			System.out.println(l);
		}

		System.out.println("Iterator");

		Iterator<Integer> it = list.iterator();

		while (it.hasNext()) {

			System.out.println(it.next());
		}

		System.out.println("List iterator");

		ListIterator<Integer> it1 = list.listIterator();

		while (it1.hasNext()) {

			System.out.println(it1.next());
		}

		while (it1.hasPrevious()) {

			System.out.println(it1.previous());
		}

		System.out.println("Lamda or foreach loop");

		list.forEach((l) -> System.out.println(l));

		int[] arr = { 10, 13, 15, 14 };

		Arrays.stream(arr).forEach((l) -> System.out.println(l));

		System.out.println("==============");

		List<Integer> list1 = new ArrayList<>();

		list1.add(10);
		list1.add(20);
		list1.add(30);

		List<Integer> list2 = new ArrayList<>();

		list2.add(10);
		list2.add(30);

//		boolean equals = list1.equals(list2);
//
//		System.out.println(equals);

		boolean contains = list1.containsAll(list2);

		boolean contains2 = list1.contains(310);

		System.out.println(contains);

		System.out.println(contains2);

		list1.addAll(list2);

		System.out.println(list1);

//		list1.remove(10);

		System.out.println(list1);

		list1.removeAll(list2);

		System.out.println(list1);

//		list1.clear();

//		System.out.println(list1);

		int indexOf = list1.indexOf(10);

		System.out.println(indexOf);

		String s = "Hello";

		System.out.println(s.indexOf('g'));
		
		int lastIndexOf = list1.lastIndexOf(100);
		
		System.out.println(lastIndexOf);
		
		

	}

}

package TestScripts;

import java.util.ArrayList;
import java.util.List;

public class UserInputClass {

	public static void main(String[] args) {

		List<Integer> list = new ArrayList<>();
		list.add(10);
		list.add(20);
		list.add(30);
		
		boolean empty = list.isEmpty();
		
		System.out.println(empty);
		
		list.set(0, 300);
		
		list.set(1, 200);
		
		System.out.println(list);
		
		
		List<Integer> subList = list.subList(0, 2);
		
		System.out.println(subList);
		
		// List to Array
		
		Object[] array = list.toArray();
		
		for(Object a:array) {
			
			System.out.println(a);
		}
		
		String string = list.toString();
		
		System.out.println(list.size());
		
		System.out.println(string.length());
		
		
		
//		String s = "Dinesh Kumar";
//		
//		String substring = s.substring(0, 6);
//		
//		System.out.println(substring);
		
		
//		
		
		
		
		
		
		
		
		
		
		
		

	}

}
